
=========================
SKA PST STAT Applications
=========================

ska_pst_stat_info
-----------------

Prints the version of the ska-pst-stat library to stdout.

ska_pst_stat_core
-----------------

The implementation of the STAT.CORE software component for the Pulsar Timing product. This application regularly (5s) processes short (100ms) segements of the voltage data streams received from the Correlator Beam Former. Each segment of data is analysed and a range of statistics metrics are computed. Simple scalar metrics (mean, variance, etc) are provided to a TANGO device and a richer set of vector metrics (bandpasses, histograms, etc) are made available to signal displays. A small HDF5 data file (< 10 MB) is generated from each segment that is processed and is written to the configured output path of <path>/SCAN_<scan_id>/monitoring_stats/.

    Usage: ska_pst_stat_core

      -d path     write output files to the path [default /tmp]
      -f config   ascii file containing observation configuration
      -h          print this help text
      -t timeout  wait for the specified number of seconds for exiting
      -v          verbose output

ska_pst_stat_file_proc
----------------------

Computes data quality statistics for every sample in the specified pair of data and weights files,
as output by the AA0.5 voltage recorder, producing a single HDF5 output file.

    Usage: ska_pst_stat_file_proc -d data -w weights

    -d data     name of data file
    -w weights  name of weights file

The path of the output file is created according to the following rules:

    #. The output filename has the same stem as the data filename with the extension replaced by `h5`; e.g. if the data filename is `something.data` then the output filename is `something.h5`

    #. If the data file is in a parent folder, then the output file is written to the same parent folder with the last sub-folder replaced by `stat` (if necessary, the `stat` sub-folder is created); e.g.

        #. if the data filename is `parent/something.dada` then the output filename is `stat/something.h5`

        #. if the data filename is `/absolute/path/to/something.data` then the output filename is `/absolute/path/stat/something.h5`

plot_stat_file
--------------

A python script is provided as an example of how to examine the contents of the HDF5 file that is generated by ska_pst_stat_file_proc.
This python script is found in `tests/utils`.

    usage: plot_stat_file.py [-h] stat_filename
    plot_stat_file.py: error: the following arguments are required: stat_filename

To generate a stats file that can be used with this script, use the ska_pst_generate_file application provided in ska-pst-common. This application is included in the ska-pst-stat builder image.

    # Use the custom makefile target to launc and instance of the ska-pst-stat builder image
    make local-dev-env

    # Install additional dependencies
    make local-apt-install-dependencies

    # Build the release build of ska-pst-stat
    make local-cpp-build-release

    # This command will generate a data and weights files in /tmp/data and /tmp/weights subdirectories.
    cd /tmp
    ska_pst_generate_file -d /mnt/ska-pst-stat/src/ska/pst/stat/tests/data/data_header_LowAA0.5.txt -w /mnt/ska-pst-stat/src/ska/pst/stat/tests/data/weights_header_LowAA0.5.txt -s GaussianNoise -T 0.1

    # This command will generate the HDF5 statistics file
    ska_pst_stat_file_proc -d data/2023-02-14-22:15:37_0000000000000000_000000.dada -w weights/2023-02-14-22:15:37_0000000000000000_000000.dada

    # the generated HDF5 statistics file will then be produced in the /tmp/stat directory.
